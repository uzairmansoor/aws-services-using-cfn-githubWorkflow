AWSTemplateFormatVersion: "2010-09-09"
Description: Template to deploy rds instance
Parameters:
  project:
    Type: String
    Description:  Project Name
  app:
    Type: String
    Description:  Application Name   
  env:
    Type: String
    Default: dev
    AllowedValues: [prod, dev, qa, stag]
    Description:  Environment Name
  dBInstanceIdentifier:
    Type: String
    Description: Name for the DB instance
    Default: db
  dbName:
    Default: "MyDatabase"
    Description: "The database name"
    Type: "String"
    MinLength: "1"
    MaxLength: "64"
    AllowedPattern: "[a-zA-Z][a-zA-Z0-9]*"
    ConstraintDescription: "Must begin with a letter and contain only alphanumeric characters."
  dBInstanceClass:
    Type: String
    Default: "db.t3.micro"
    Description: Class for the DB instance
  dBAllocatedStorage:
    Type: "Number"
    MinValue: "5"
    MaxValue: "1024"
    Default: "20"
    ConstraintDescription: "Must be between 5 and 1024Gb."
  multiAzDatabase:
    Type: String
    Default: False
    Description: "Create a multi-AZ RDS database instance"
    AllowedValues: [True, False]
  dBEngine:
    Type: String
    Default: "postgres"
    Description: Database engine that you want to use for this DB instance
  dBUsername:
    Description: "The database admin account username"
    NoEcho: "true"
    Type: "String"
    MinLength: "1"
    MaxLength: "16"
    AllowedPattern: "[a-zA-Z][a-zA-Z0-9]*"
    ConstraintDescription: "Must begin with a letter and contain only alphanumeric characters."
  dBPassword:
    NoEcho: "true"
    Description: "The database admin account password"
    Type: "String"
    MinLength: "8"
    MaxLength: "41"
    AllowedPattern: "[a-zA-Z0-9]*"
    ConstraintDescription: "Must contain only alphanumeric characters."
  dbDeletionProtection:
    Type: String
    Default: true
    AllowedValues: [true, false]
    Description: Select true to enable deletion protection on database and false to disable
  dbEngineVersion:
    Type: String
    Default: 15.5
    Description: Version number of database engine
  dbPort:
    Type: String
    Default: 5432
    Description: The port number on which the database accepts connections
  dbEncryptionStatus:
    Type: String
    Default: true
    AllowedValues: [true, false]
    Description: Select true to enable encryption on DB instance and false to disable
  #  dbPrivateSubnet01:
  #    Type: AWS::EC2::Subnet::Id
  #    Description: Id of subnet for the DB cluster
  #  dbPrivateSubnet02:
  #    Type: AWS::EC2::Subnet::Id
  #    Description: Id of subnet for the DB cluster
  dbSubnets:
     Type: List<AWS::EC2::Subnet::Id>
     Description: Id of subnet for the DB cluster
  dbSecurityGroup:
     Type: AWS::EC2::SecurityGroup::Id
     Description: Id of the security group
  dbPubliclyAccessible:
    Type: String
    Default: true
    AllowedValues: [true, false]
    Description: Select true to create the DB instance internet-facing and false to make it private
  dbStorageType:
    Type: String
    Default: gp3
    AllowedValues: [standard, io1, gp2, gp3]
    Description: Storage type for DB instance
Conditions:
  enableEncryption: !Equals [!Ref dbEncryptionStatus, true]
Resources:
  dbSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: "Subnet Group for database"
      DBSubnetGroupName: !Sub "${project}-${env}-${app}-${dBInstanceIdentifier}-${AWS::Region}"
      SubnetIds: !Ref dbSubnets
      Tags:
        - Key: Name
          Value: !Sub "${project}-${env}-${app}-${dBInstanceIdentifier}-${AWS::Region}"
        - Key: project
          Value: !Ref project
        - Key: environment
          Value: !Ref env
  dbInstance:
    Type: "AWS::RDS::DBInstance"
    Properties:
      DBInstanceIdentifier: !Sub "${project}-${env}-${app}-${dBInstanceIdentifier}-${AWS::Region}"
      DBName: !Ref dbName
      Port: !Ref dbPort
      DBSubnetGroupName: !Ref dbSubnetGroup
      DBInstanceClass: !Ref dBInstanceClass
      AllocatedStorage: !Ref dBAllocatedStorage
      Engine: !Ref dBEngine
      EngineVersion: !Ref dbEngineVersion
      StorageType: !Ref dbStorageType
      DeletionProtection: !Ref dbDeletionProtection
      StorageEncrypted:
        !If [enableEncryption, !Ref dbEncryptionStatus, !Ref "AWS::NoValue"]
      PubliclyAccessible: !Ref dbPubliclyAccessible
      MasterUsername: !Ref dBUsername
      MasterUserPassword: !Ref dBPassword
      MultiAZ: !Ref multiAzDatabase
      VPCSecurityGroups:
        - !Ref dbSecurityGroup
      Tags:
        - Key: Name
          Value: !Sub "${project}-${env}-${app}-DB-${AWS::Region}"
        - Key: project
          Value: !Ref project
        - Key: environment
          Value: !Ref env
Outputs:
  dbInstanceArn:
    Description: Arn of rds instance
    Value: !GetAtt dbInstance.DBInstanceArn
    Export:
      Name: !Sub "${project}-${env}-${app}-dbInstanceArn-${AWS::Region}"
  dBInstanceIdentifier:
    Description: Identifier of the rds instance
    Value: !Ref dbInstance
    Export:
      Name: !Sub "${project}-${env}-${app}-dbInstancename-${AWS::Region}"
  dBEndpoint:
    Description: Endpoint for the newly created RDS instance
    Value: !GetAtt dbInstance.Endpoint.Address
    Export:
      Name: !Sub "${project}-${env}-${app}-dBEndpoint-${AWS::Region}"